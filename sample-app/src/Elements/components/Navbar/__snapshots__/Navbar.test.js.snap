// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`renders proper 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Navbar />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "checkPropTypes": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "aria-label": "main navigation",
      "children": Array [
        <NavbarBrand />,
        <NavbarMenu
          menuList={
            Array [
              Object {
                "link": "/",
                "menuLabel": "Home",
              },
              Object {
                "link": "/about",
                "menuLabel": "About React",
              },
              Object {
                "link": "/references",
                "menuLabel": "References",
              },
            ]
          }
        />,
      ],
      "className": "navbar",
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {},
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "menuList": Array [
            Object {
              "link": "/",
              "menuLabel": "Home",
            },
            Object {
              "link": "/about",
              "menuLabel": "About React",
            },
            Object {
              "link": "/references",
              "menuLabel": "References",
            },
          ],
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
    ],
    "type": "nav",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "aria-label": "main navigation",
        "children": Array [
          <NavbarBrand />,
          <NavbarMenu
            menuList={
              Array [
                Object {
                  "link": "/",
                  "menuLabel": "Home",
                },
                Object {
                  "link": "/about",
                  "menuLabel": "About React",
                },
                Object {
                  "link": "/references",
                  "menuLabel": "References",
                },
              ]
            }
          />,
        ],
        "className": "navbar",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {},
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "menuList": Array [
              Object {
                "link": "/",
                "menuLabel": "Home",
              },
              Object {
                "link": "/about",
                "menuLabel": "About React",
              },
              Object {
                "link": "/references",
                "menuLabel": "References",
              },
            ],
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
      ],
      "type": "nav",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "legacyContextMode": "parent",
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getChildContext": Object {
            "calledByRenderer": false,
          },
          "getDerivedStateFromError": true,
          "getDerivedStateFromProps": Object {
            "hasShouldComponentUpdateBug": false,
          },
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
    Symbol(enzyme.__providerValues__): undefined,
  },
  Symbol(enzyme.__providerValues__): Map {},
}
`;
