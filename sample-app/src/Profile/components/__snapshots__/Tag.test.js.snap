// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Tag Component Tag renders correctly 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Tag />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "checkPropTypes": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": <div
        className="control"
      >
        <div
          className="tags has-addons"
          onClick={[Function]}
        >
          <span
            className="tag is-info"
          >
            Likes
          </span>
          <span
            className="tag"
          >
            0
          </span>
        </div>
      </div>,
      "className": "field is-grouped is-grouped-multiline",
    },
    "ref": null,
    "rendered": Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": <div
          className="tags has-addons"
          onClick={[Function]}
        >
          <span
            className="tag is-info"
          >
            Likes
          </span>
          <span
            className="tag"
          >
            0
          </span>
        </div>,
        "className": "control",
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <span
              className="tag is-info"
            >
              Likes
            </span>,
            <span
              className="tag"
            >
              0
            </span>,
          ],
          "className": "tags has-addons",
          "onClick": [Function],
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "Likes",
              "className": "tag is-info",
            },
            "ref": null,
            "rendered": "Likes",
            "type": "span",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": 0,
              "className": "tag",
            },
            "ref": null,
            "rendered": 0,
            "type": "span",
          },
        ],
        "type": "div",
      },
      "type": "div",
    },
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": <div
          className="control"
        >
          <div
            className="tags has-addons"
            onClick={[Function]}
          >
            <span
              className="tag is-info"
            >
              Likes
            </span>
            <span
              className="tag"
            >
              0
            </span>
          </div>
        </div>,
        "className": "field is-grouped is-grouped-multiline",
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": <div
            className="tags has-addons"
            onClick={[Function]}
          >
            <span
              className="tag is-info"
            >
              Likes
            </span>
            <span
              className="tag"
            >
              0
            </span>
          </div>,
          "className": "control",
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <span
                className="tag is-info"
              >
                Likes
              </span>,
              <span
                className="tag"
              >
                0
              </span>,
            ],
            "className": "tags has-addons",
            "onClick": [Function],
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "Likes",
                "className": "tag is-info",
              },
              "ref": null,
              "rendered": "Likes",
              "type": "span",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": 0,
                "className": "tag",
              },
              "ref": null,
              "rendered": 0,
              "type": "span",
            },
          ],
          "type": "div",
        },
        "type": "div",
      },
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "legacyContextMode": "parent",
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getChildContext": Object {
            "calledByRenderer": false,
          },
          "getDerivedStateFromError": true,
          "getDerivedStateFromProps": Object {
            "hasShouldComponentUpdateBug": false,
          },
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
    Symbol(enzyme.__providerValues__): undefined,
  },
  Symbol(enzyme.__providerValues__): Map {},
  Symbol(enzyme.__childContext__): null,
}
`;
